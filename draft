
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from webdriver_manager.chrome import ChromeDriverManager
import time
import csv

# Set up Chrome options for headless mode (no browser UI)
options = Options()
options.add_argument("--headless")
options.add_argument("--no-sandbox")
options.add_argument("--disable-dev-shm-usage")

# Initialize the WebDriver
driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()), options=options)


def extract_relevant_blocks():
    """Extract relevant content blocks that match the specified structure."""
    # Open the URL
    url = "https://www.gov.il/he/departments/dynamiccollectors/hesdermutne?skip=0"
    driver.get(url)

    # Wait for the page to load completely
    time.sleep(5)

    # Click all "view more" buttons to expand the content
    expand_buttons = driver.find_elements(By.XPATH, "//div[@ng-click='item.isDisplay = !item.isDisplay']")
    for button in expand_buttons:
        button.click()
        time.sleep(1)  # Wait for content to load

    # Find the relevant blocks by the div structure
    blocks = driver.find_elements(By.XPATH, "//div[@class='row row-gov']")
    relevant_blocks = []

    for block in blocks:
        # Check if this block contains the specific structure (label and span with content)
        if block.find_elements(By.XPATH, ".//label[normalize-space(text())='מספר תיק']"):
            relevant_blocks.append(block.get_attribute("outerHTML"))

    return relevant_blocks


def save_to_txt(relevant_blocks):
    """Save the relevant content blocks to a TXT file."""
    with open("relevant_blocks.txt", "w", encoding="utf-8") as file:
        file.write("\n\n".join(relevant_blocks))
    print("Relevant content blocks have been saved to 'relevant_blocks.txt'.")


def save_to_csv(relevant_blocks):
    """Save the relevant content blocks to a CSV file."""
    with open("relevant_blocks.csv", "w", encoding="utf-8", newline="") as file:
        writer = csv.writer(file)
        writer.writerow(["Block Content"])  # Header row
        for block in relevant_blocks:
            writer.writerow([block])  # Write each block as a new row
    print("Relevant content blocks have been saved to 'relevant_blocks.csv'.")


try:
    # Extract the relevant blocks
    relevant_blocks = extract_relevant_blocks()

    # Export the blocks to a TXT file
    save_to_txt(relevant_blocks)

    # Export the blocks to a CSV file
    save_to_csv(relevant_blocks)

except Exception as e:
    print(f"An error occurred: {e}")

finally:
    driver.quit()
    print("Driver closed.")
